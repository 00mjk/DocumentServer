<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Opensource">		<PropertyGroup>		<InputDir>..\..</InputDir>		<OutputDir>..\..\deploy</OutputDir>		<ActiveX>\ActiveX</ActiveX>		<AppData>\App_Data</AppData>		<Bin>\Bin</Bin>		<Deploy>\deploy</Deploy>		<DocService>\DocService</DocService>		<DocServiceUncompiled>$(DocService).uncompiled</DocServiceUncompiled>		<FileConverterService>\FileConverterService</FileConverterService>		<License>\License</License>		<NodeJsProjects>\NodeJsProjects</NodeJsProjects>		<OfficeWeb>\OfficeWeb</OfficeWeb>		<Redist>\Redist</Redist>		<ServerComponents>\ServerComponents</ServerComponents>		<SpellCheckerService>\SpellCheckerService</SpellCheckerService>		<CoAuthoringService>\CoAuthoringService</CoAuthoringService>		<ThirdParty>\ThirdParty</ThirdParty>		<Tools>\Tools</Tools>		<Logs>\Logs</Logs>		<SkipBuildSdk>false</SkipBuildSdk>	</PropertyGroup>		<ItemGroup>		<ThirdPartyFiles Include="$(InputDir)$(ThirdParty)$(Bin)\**"/>	</ItemGroup>		<Target Name="Common">		<CallTarget Targets="CleanupOutputDir"/>		<CallTarget Targets="CopyFileConverterService"/>		<CallTarget Targets="CopyActiveXFiles"/>		<CallTarget Targets="CopyToolsFiles"/>		<CallTarget Targets="CopyLicenceFiles"/>		<CallTarget Targets="MakeLogsDir"/>		<CallTarget Targets="DeploySpellCheckerService"/>		<CallTarget Targets="DeployCoAuthoringService"/>	</Target>		<Target Name="Opensource">		<CallTarget Targets="Common"/>				<MSBuild Projects="$(MSBuildProjectFullPath)"    			 Properties="ProjectDir=$(InputDir)$(OfficeWeb)\sdk\build\opensource"    			 Targets="BuildProject" />				 		<MSBuild Projects="$(MSBuildProjectFullPath)"    			 Properties="ProjectDir=$(InputDir)$(OfficeWeb)\build"    			 Targets="BuildProject" />				 		<CallTarget Targets="DeployDocService"/>	</Target>		<Target Name="Commercial">		<CallTarget Targets="Common"/>				<MSBuild Projects="$(MSBuildProjectFullPath)"    			 Properties="ProjectDir=$(InputDir)$(OfficeWeb)\sdk\build\deploy"    			 Targets="BuildProject"     			 Condition=" '$(SkipBuildSdk)'!='true' "/>				 		<MSBuild Projects="$(MSBuildProjectFullPath)"    			 Properties="ProjectDir=$(InputDir)$(OfficeWeb)\build"    			 Targets="BuildProject" />				 		<CallTarget Targets="DeployDocService"/>	</Target>		<Target Name="Internal">		<CallTarget Targets="Commercial"/>	</Target>		<Target Name="CleanupOutputDir">		<RemoveDir Directories="$(OutputDir)" ContinueOnError="false"/>	</Target>		<Target Name="DeployDocService">		<ItemGroup>			<DocServiceFiles Include="$(InputDir)$(DocService)\**"/>			<ServerComponentsFiles Include="				$(InputDir)$(ServerComponents)$(Bin)\FileConverterUtils2.dll;"/>			<ConfigFiles Include="				$(InputDir)$(ServerComponents)$(Bin)\Settings.config;				$(InputDir)$(ServerComponents)$(Bin)\ConnectionStrings.config;"/>			<OfficeWebFiles Include="$(InputDir)$(OfficeWeb)\deploy\**"/>		</ItemGroup>				<RemoveDir Directories="$(InputDir)$(DocServiceUncompiled)" ContinueOnError="false"/>				<Copy			SourceFiles="@(DocServiceFiles)"			DestinationFiles="@(DocServiceFiles->'$(InputDir)$(DocServiceUncompiled)\%(RecursiveDir)%(Filename)%(Extension)')"/>					<Copy			SourceFiles="@(ServerComponentsFiles)"			DestinationFiles="@(ServerComponentsFiles->'$(InputDir)$(DocServiceUncompiled)$(Bin)\%(RecursiveDir)%(Filename)%(Extension)')"/>					<Copy			SourceFiles="@(ConfigFiles)"			DestinationFiles="@(ConfigFiles->'$(InputDir)$(DocServiceUncompiled)\%(RecursiveDir)%(Filename)%(Extension)')"/>						<Copy			SourceFiles="@(ThirdPartyFiles)"			DestinationFiles="@(ThirdPartyFiles->'$(InputDir)$(DocServiceUncompiled)$(Bin)\%(RecursiveDir)%(Filename)%(Extension)')"/>				<AspNetCompiler			VirtualPath="/"			PhysicalPath="$(InputDir)$(DocServiceUncompiled)"			TargetPath="$(OutputDir)$(DocService)"			Force="true" />		<Copy			SourceFiles="@(OfficeWebFiles)"			DestinationFiles="@(OfficeWebFiles->'$(OutputDir)$(DocService)$(OfficeWeb)\%(RecursiveDir)%(Filename)%(Extension)')"/>		<MakeDir			Directories="$(OutputDir)$(DocService)$(AppData)"/>	</Target>	<Target Name="CopyFileConverterService">		<ItemGroup>			<FileConverterServiceExecutableFiles Include="$(InputDir)$(ServerComponents)$(Bin)\**;"/>			<PresentationThemesFiles 				Include="$(InputDir)$(OfficeWeb)\sdk\PowerPoint\themes\**;"				Exclude="$(InputDir)$(OfficeWeb)\sdk\PowerPoint\themes\**\*.js;"/>		</ItemGroup>				<Copy			SourceFiles="@(FileConverterServiceExecutableFiles)"			DestinationFiles="				@(FileConverterServiceExecutableFiles->'$(OutputDir)$(FileConverterService)$(Bin)\%(RecursiveDir)%(Filename)%(Extension)')"/>					<Copy			SourceFiles="@(ThirdPartyFiles)"			DestinationFiles="@(ThirdPartyFiles->'$(OutputDir)$(FileConverterService)$(Bin)\%(RecursiveDir)%(Filename)%(Extension)')"/>					<Copy			SourceFiles="@(PresentationThemesFiles)"			DestinationFiles="@(PresentationThemesFiles->'$(OutputDir)$(FileConverterService)\presentationthemes\%(RecursiveDir)%(Filename)%(Extension)')"/>				</Target>		<Target Name="CopyActiveXFiles">		<ItemGroup>			<ActiveXFiles Include="$(InputDir)$(ActiveX)$(Redist)\**;"/>		</ItemGroup>				<Copy			SourceFiles="@(ActiveXFiles)"			DestinationFiles="@(ActiveXFiles->'$(OutputDir)$(ActiveX)\%(RecursiveDir)%(Filename)%(Extension)')"/>						</Target>		<Target Name="CopyToolsFiles">		<ItemGroup>			<ToolsFiles 				Include="					$(InputDir)$(Tools)$(Bin)\**;"/>		</ItemGroup>		<Copy			SourceFiles="@(ToolsFiles)"			DestinationFiles="@(ToolsFiles->'$(OutputDir)$(Tools)\%(RecursiveDir)%(Filename)%(Extension)')"/>						</Target>			<Target Name="DeploySpellCheckerService">		<ItemGroup>			<SpellCheckerServiceFiles 				Include="					$(InputDir)$(NodeJsProjects)\C?mmon\**;					$(InputDir)$(NodeJsProjects)\S?ellChecker\**;"/>		</ItemGroup>		<Copy 			SourceFiles="@(SpellCheckerServiceFiles)" 			DestinationFiles="@(SpellCheckerServiceFiles->'$(OutputDir)$(SpellCheckerService)\%(RecursiveDir)%(Filename)%(Extension)')"/>		<Exec 			Command="npm install"			WorkingDirectory="$(OutputDir)$(SpellCheckerService)\SpellChecker"/>					<Exec 			Command="npm install"			WorkingDirectory="$(OutputDir)$(SpellCheckerService)\Common"/>					<ItemGroup>			<NodehunFiles Include="$(OutputDir)$(SpellCheckerService)\SpellChecker\nodehun\**;"/>		</ItemGroup>		<Copy 			SourceFiles="@(NodehunFiles)" 			DestinationFiles="@(NodehunFiles->'$(OutputDir)$(SpellCheckerService)\SpellChecker\node_modules\nodehun\%(RecursiveDir)%(Filename)%(Extension)')"/>					<Exec 			Command="node-gyp configure &amp;&amp; node-gyp build"			WorkingDirectory="$(OutputDir)$(SpellCheckerService)\SpellChecker\node_modules\nodehun\src" />		<RemoveDir			Directories="				$(OutputDir)$(SpellCheckerService)\SpellChecker\nodehun\;" />	</Target>		<Target Name="CopyLicenceFiles">		<ItemGroup>			<LicenseFiles Include="$(InputDir)$(License)\**;"/>		</ItemGroup>		<Copy 			SourceFiles="@(LicenseFiles)" 			DestinationFiles="@(LicenseFiles->'$(OutputDir)$(License)\%(RecursiveDir)%(Filename)%(Extension)')"/>				</Target>		<Target Name="MakeLogsDir">		<MakeDir			Directories="$(OutputDir)$(Logs)"/>	</Target>		<Target Name="DeployCoAuthoringService">				<ItemGroup>			<CoAuthoringServiceFiles 				Include="					$(InputDir)$(NodeJsProjects)\C?mmon\**;					$(InputDir)$(NodeJsProjects)\C?Authoring\**;"/>		</ItemGroup>		<Copy 			SourceFiles="@(CoAuthoringServiceFiles)" 			DestinationFiles="@(CoAuthoringServiceFiles->'$(OutputDir)$(CoAuthoringService)\%(RecursiveDir)%(Filename)%(Extension)')"/>				<Exec 			Command="npm install"			WorkingDirectory="$(OutputDir)$(CoAuthoringService)\CoAuthoring"/>					<Exec 			Command="npm install"			WorkingDirectory="$(OutputDir)$(CoAuthoringService)\Common"/>	</Target>	<Target Name="BuildProject">		<Exec			Command="npm install" 			WorkingDirectory="$(ProjectDir)"/>		<Exec			Command="grunt --no-color"			WorkingDirectory="$(ProjectDir)"/>	</Target>	</Project>